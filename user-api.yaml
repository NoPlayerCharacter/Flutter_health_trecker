openapi: '3.0.3'
info:
  title: API Title
  version: '1.0'
servers:
  - url: https://localhost:3000

components:
  schemas:
    User:
      type: object
      properties:
        id_user:
          type: integer
          format: int32
        nama:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
        password:
          type: string
          maxLength: 11

    Traineer:
      type: object
      properties:
        id_traineer:
          type: integer
        nama:
          type: string
          maxLength: 255
        spesialis:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 255

    Jadwal:
      type: object
      properties:
        id_jadwal:
          type: integer
        id_user:
          type: integer
        id_traineer:
          type: integer
        tanggal:
          type: string
          format: date
        waktu:
          type: string
          format: date-time
        jenis_latihan:
          type: string
          maxLength: 255

    Minum:
      type: object
      properties:
        id_minum:
          type: integer
        id_user:
          type: integer
        tanggal:
          type: string
          format: date-time
        waktu:
          type: string
          format: date
        jumlah_air:
          type: number
          format: float

    Progress:
      type: object
      properties:
        id_progress:
          type: integer
        id_user:
          type: integer
        tanggal:
          type: string
          format: date
        jumlah_langkah:
          type: number
          format: float
        kalori_harian:
          type: number
          format: float
        kalori_mingguan:
          type: number
          format: float
        kalori_bulanan:
          type: number
          format: float

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

  /traineers:
    get:
      summary: Get all traineers
      responses:
        '200':
          description: List of traineers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Traineer'
    post:
      summary: Create a new traineer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Traineer'
      responses:
        '201':
          description: Traineer created

  /traineers/{id}:
    get:
      summary: Get a traineer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Traineer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traineer'
    put:
      summary: Update a traineer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Traineer'
      responses:
        '200':
          description: Traineer updated
    delete:
      summary: Delete a traineer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Traineer deleted

  /jadwals:
    get:
      summary: Get all jadwals
      responses:
        '200':
          description: List of jadwal
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Jadwal'
    post:
      summary: Create a new jadwal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jadwal'
      responses:
        '201':
          description: Jadwal created

  /jadwals/{id}:
    get:
      summary: Get a jadwal by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Jadwal data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jadwal'
    put:
      summary: Update a jadwal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jadwal'
      responses:
        '200':
          description: Jadwal updated
    delete:
      summary: Delete a jadwal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Jadwal deleted

  /minum:
    get:
      summary: Get all minum entries
      responses:
        '200':
          description: List of minum
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Minum'
    post:
      summary: Create a new minum entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minum'
      responses:
        '201':
          description: Minum entry created

  /minum/{id}:
    get:
      summary: Get a minum entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Minum data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minum'
    put:
      summary: Update a minum entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minum'
      responses:
        '200':
          description: Minum updated
    delete:
      summary: Delete a minum entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Minum deleted

  /progress:
    get:
      summary: Get all progress entries
      responses:
        '200':
          description: List of progress
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Progress'
    post:
      summary: Create a new progress entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
      responses:
        '201':
          description: Progress entry created

  /progress/{id}:
    get:
      summary: Get a progress entry by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Progress data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
    put:
      summary: Update a progress entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
      responses:
        '200':
          description: Progress updated
    delete:
      summary: Delete a progress entry
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Progress deleted